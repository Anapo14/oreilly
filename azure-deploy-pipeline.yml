# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  imageName: 'pythondemos.azurecr.io/tweeter3:latest'
  containerName: 'tweeterapp'
steps:
- script: docker login pythondemos.azurecr.io -u pythondemos -p $DOCKER_LOGIN_PASSWORD
  env:
    DOCKER_LOGIN_PASSWORD: $(ACR_KEY)
  displayName: 'docker login'
- script: docker build -f Dockerfile -t $(imageName) .
  displayName: 'docker build'
- script: docker run --name $(containerName) --detach -e DJANGO_SETTINGS_MODULE=tweeter3.settings.production -e DB_USER=$DB_USER -e DB_PASSWORD=$DB_PASSWORD -e DB_NAME=$DB_NAME -e DB_HOST=$DB_HOST $(imageName)
  env:
    DB_USER: $(DB_USER)
    DB_PASSWORD: $(DB_PASSWORD)
    DB_NAME: $(DB_NAME)
    DB_HOST: $(DB_HOST)
  displayName: 'start container'
- script: docker exec $(containerName) pip3 install pytest pytest-azurepipelines
  displayName: install pytest
- script: docker exec $(containerName) touch test-output.xml
  displayName: touch test output file
- script: docker exec $(containerName) python3 -m pytest .
  displayName: run tests
- script: docker cp $(containerName):/app/test-output.xml .
  displayName: copy test results
- script: docker exec $(containerName) python3 manage.py migrate
  displayName: run django migrations
- script: docker push $(imageName)
  displayName: 'docker push'
